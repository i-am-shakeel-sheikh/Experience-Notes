you create an Observable instance that defines a subscriber function. This is the function that is executed when the consumer calls subscribe() method

setTimeOut() method

setTimeOut(function(){alert("Hello")},3000)

displays an alert box after 3 seconds


const {x,y} = {x:"krishna",y:"balaram"}
document.write(x);


 locations.subscribe({
  next(position) { console.log('Current Position: ', position); },
  error(msg) { console.log('Error Getting Location: ', msg); }
});

myObservable = new Observable(subsriberfn)

myObservable = new Observable((observer) => {
  // Get the next and error callbacks. These will be passed in when
  // the consumer subscribes.
  const {next, error} = observer;

  for x in valuesproduced:
    if (x > 0):
      next(x)
    else 
      error(x)
}


const myObserver = {
  next: x => console.log('Observer got a next value: ' + x),
  error: err => console.error('Observer got an error: ' + err),
  complete: () => console.log('Observer got a complete notification'),
};


myObservable.subscribe(
  x => console.log('Observer got a next value: ' + x),
  err => console.error('Observer got an error: ' + err),
  () => console.log('Observer got a complete notification')
);

myObservable.subscribe(observer)

subscribe(observer){
  subscriberfn(observer)
}

it also accepts callback functions 

OPFRS.TFRF_FRD_DRF_AGG_M 
/data/publish/OPFRS/TFRF_FRD_DRF_AGG_M/prch_qtr_id=20183/

